<?php
require_once 'conexao.php';
$PERFIS_PERMITIDOS = ['administrador']; // apenas admin
require_once 'verifica_sessao.php';

// ‚õîÔ∏è Fun√ß√£o redir (usada s√≥ para ERROS)
function redir($ok, $msg) {
    session_start();
    if ($ok) {
        $_SESSION['msg'] = $msg;
    } else {
        $_SESSION['erro'] = $msg;
    }
    header("Location: cadastro_usuarios.php");
    exit;
}

// üì• Dados do POST
$tipo       = $_POST['tipo'] ?? '';
$nome       = trim($_POST['nome'] ?? '');
$cpf        = trim($_POST['cpf'] ?? '');
$senha      = $_POST['senha'] ?? '';
$senha2     = $_POST['senha2'] ?? '';
$matricula  = null;
$email      = null;
$data_nascimento = null;

// üîç Valida√ß√£o inicial
if (!$tipo || !$nome || !$cpf || !$senha || !$senha2) {
    redir(false, 'Preencha todos os campos obrigat√≥rios.');
}

if ($senha !== $senha2) {
    redir(false, 'As senhas n√£o conferem.');
}

$tiposValidos = ['aluno', 'professor', 'administrador'];
if (!in_array($tipo, $tiposValidos, true)) {
    redir(false, 'Tipo de usu√°rio inv√°lido.');
}

// üìå Campos adicionais
$nome_pai = trim($_POST['nome_pai'] ?? '') ?: null;
$nome_mae = trim($_POST['nome_mae'] ?? '') ?: null;

if ($tipo === 'aluno') {
    $email           = trim($_POST['email_aluno'] ?? '');
    $matricula       = trim($_POST['matricula_aluno'] ?? '');
    $data_nascimento = $_POST['data_nascimento'] ?? null;
} elseif ($tipo === 'professor') {
    $email           = trim($_POST['email_prof'] ?? '');
    $matricula       = trim($_POST['matricula_prof'] ?? '');
    $data_nascimento = $_POST['data_nascimento'] ?? null;
} elseif ($tipo === 'administrador') {
    $email           = trim($_POST['email_prof'] ?? ''); // Reaproveitado, ou voc√™ pode criar um campo espec√≠fico
    $matricula       = trim($_POST['matricula_admin'] ?? '');
    $data_nascimento = $_POST['data_nascimento'] ?? null;
}

// ‚ùå Campos obrigat√≥rios
if (!$email) {
    redir(false, 'O campo E-mail √© obrigat√≥rio.');
}
if (!$matricula) {
    redir(false, 'O campo Matr√≠cula √© obrigat√≥rio.');
}
if (!$data_nascimento) {
    redir(false, 'O campo Data de Nascimento √© obrigat√≥rio.');
}

// ‚úÖ Valida√ß√µes de unicidade e inser√ß√£o
try {
    // CPF duplicado
    $stmt = $pdo->prepare("SELECT id FROM usuarios WHERE cpf = :cpf LIMIT 1");
    $stmt->execute([':cpf' => $cpf]);
    if ($stmt->fetch()) {
        redir(false, 'CPF j√° cadastrado.');
    }

    // Matr√≠cula duplicada
    $stmt = $pdo->prepare("SELECT id FROM usuarios WHERE matricula = :matricula LIMIT 1");
    $stmt->execute([':matricula' => $matricula]);
    if ($stmt->fetch()) {
        redir(false, 'Matr√≠cula j√° cadastrada.');
    }

    // E-mail duplicado
    $stmt = $pdo->prepare("SELECT id FROM usuarios WHERE email = :email LIMIT 1");
    $stmt->execute([':email' => $email]);
    if ($stmt->fetch()) {
        redir(false, 'E-mail j√° cadastrado.');
    }

    // Hash seguro da senha
    $senhaHash = password_hash($senha, PASSWORD_DEFAULT);

    // Inser√ß√£o no banco
    $sql = "INSERT INTO usuarios 
            (tipo, nome, cpf, matricula, email, nome_pai, nome_mae, data_nascimento, senha_hash)
            VALUES 
            (:tipo, :nome, :cpf, :matricula, :email, :nome_pai, :nome_mae, :data_nascimento, :senha_hash)";

    $stmt = $pdo->prepare($sql);
    $stmt->execute([
        ':tipo'            => $tipo,
        ':nome'            => $nome,
        ':cpf'             => $cpf,
        ':matricula'       => $matricula,
        ':email'           => $email,
        ':nome_pai'        => $nome_pai,
        ':nome_mae'        => $nome_mae,
        ':data_nascimento' => $data_nascimento,
        ':senha_hash'      => $senhaHash
    ]);

    // ‚úÖ Redireciona para p√°gina de sucesso (sem par√¢metros na URL)
    header('Location: cadastro_sucesso.php');
    exit;

} catch (Throwable $e) {
    redir(false, 'Erro ao cadastrar usu√°rio.');
}